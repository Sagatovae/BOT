# –ò–ú–ü–û–†–¢–´ –ò –ü–ï–†–ï–ú–ï–ù–ù–´–ï

import discord
from discord import Embed
from discord.ext import commands, tasks

import sqlite3
import json
from tabulate import tabulate

import re
import random
from config import settings

connection = sqlite3.connect('server.db')
cursor = connection.cursor()

intents = discord.Intents().all()
bot = commands.Bot(command_prefix=settings['PREFIX'], intents=intents)
bot.remove_command('help')
int_pattern = re.compile(r'^\s*[-+]?\d+\s*$')

# –ö–û–ù–ï–¶ –ò–ú–ü–û–†–¢–æ–≤ –ò –ü–ï–†–ï–ú–ï–ù–ù–´–•

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫–∞–∫ {bot.user.name}')
    cursor.execute("""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        id INT,
        cash BIGINT,
        rep INT
    )""")

    for guild in bot.guilds:
        for member in guild.members:
            if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0)")
        else:
            pass
    connection.commit()



# –ù–ê–ß–ê–õ–û –§–£–ù–ö–¶–ò–ô –°–í–Ø–ó–ê–ù–ù–´–• –° –ë–ê–õ–ê–ù–°–û–ú    
@bot.event
async def on_member_join(member):
    if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
        cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0)")
        connection.commit()
    else:
        pass

@bot.command(aliases = ['balance', 'cash'])
async def __balance(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send(embed = discord.Embed(
            description= f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} :leaves:**"""
        ))
    else:
        await ctx.send(embed = discord.Embed(
        description= f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(member.id)).fetchone()[0]} :leaves:**"""
        ))
@bot.command(aliases = ['award'])
@commands.has_permissions(administrator = True)
async def __award(ctx, member: discord.Member = None, amount: int = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É")
    else:
        if amount is None:
            await ctx.send(f"**{ctx.author}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å**")
        elif int(amount) < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1")
        else:
            cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(int(amount), member.id))
            connection.commit()

            await ctx.message.add_reaction('üî¥')

# –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –°–í–Ø–ó–ê–ù–ù–´–• –° –ë–ê–õ–ê–ù–°–û–ú    


# –§–£–ù–ö–¶–ò–ò –°–í–Ø–ó–ê–ù–ù–´–ï –° –†–£–õ–ï–¢–ö–û–ô
@bot.command()
async def start(ctx):
    instructions = await ctx.send('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É:')
    await instructions.add_reaction('üçé')
    await instructions.add_reaction('üçä')
    await instructions.add_reaction('üçá')
    await instructions.add_reaction('üçí')

    ctx.bot.game_choice = None  # Initialize the choice

    def check(reaction, user):
        return user == ctx.message.author and reaction.emoji in ['üçé', 'üçä', 'üçá', 'üçí']

    reaction, user = await bot.wait_for('reaction_add', check=check)
    if reaction.emoji == 'üçé':
        ctx.bot.game_choice = 1
    elif reaction.emoji == 'üçä':
        ctx.bot.game_choice = 2
    elif reaction.emoji == 'üçá':
        ctx.bot.game_choice = 3
    elif reaction.emoji == 'üçí':
        ctx.bot.game_choice = 4
    # message = await ctx.send(instructions)
    # reactions = ['üçé', 'üçä', 'üçá', 'üçí']
    # for reaction in reactions:
    #     await message.add_reaction(reaction)
    
previous_message = None

@bot.command()
async def startgame(ctx):
    global previous_message
    instructions = await ctx.send('–î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∏–≥—Ä–∞:')
    previous_message = instructions

previous_messages = defaultdict(lambda: None)

@bot.command()
async def startgame(ctx):
    global previous_messages
    instructions = await ctx.send('–î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∏–≥—Ä–∞:')
    previous_messages[ctx.author.id] = instructions

from collections import defaultdict

@bot.command()
async def add_text(ctx, *, new_text):
    global previous_messages

    if previous_messages[ctx.author.id]:
        # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∏—Å–ª–∞ –∏ —Å–ª–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
        numbers = re.findall(r'\d+', new_text)
        words = re.findall(r'\b\w+\b', new_text)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ –¥–ª—è —á–∏—Å–µ–ª –∏ —Å–ª–æ–≤
        numbers_block = '–ß–∏—Å–ª–∞: ' + ', '.join(numbers) if numbers else '–ù–µ—Ç —á–∏—Å–µ–ª'
        words_block = '–°–ª–æ–≤–∞: ' + ', '.join(words) if words else '–ù–µ—Ç —Å–ª–æ–≤'

        # –°–æ–∑–¥–∞–µ–º Embed –æ–±—ä–µ–∫—Ç —Å –¥–≤—É–º—è –ø–æ–ª—è–º–∏ –¥–ª—è —á–∏—Å–µ–ª –∏ —Å–ª–æ–≤
        embed = Embed(color=ctx.author.color)
        embed.add_field(name='–ß–∏—Å–ª–∞', value=numbers_block, inline=False)
        embed.add_field(name='–°–ª–æ–≤–∞', value=words_block, inline=False)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Embed –æ–±—ä–µ–∫—Ç–æ–º
        await previous_messages[ctx.author.id].delete()  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        previous_messages[ctx.author.id] = await ctx.send(embed=embed)
        await ctx.send("–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é.")
    else:
        await ctx.send("–ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


@bot.command()
async def bet(ctx, bet):
    # if ctx.bot.game_choice is None:
    #     start_message = await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.')
    message = await ctx.send(f"@{ctx.message.author.name} {bet}")
    await message.edit(content='–°—Ç–∞–≤–∫–∞: {bet}')
    if ctx.message.author.bot:
        return

    if not int_pattern.match(bet):
        return await ctx.send("–û—à–∏–±–∫–∞! –ü–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç–∞–≤–∫—É!")
    num = int(bet)
    if num <= 0:
        return await ctx.send("–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –Ω—É–ª—é!")
    return await ctx.send(f"–°—Ç–∞–≤–∫–∞: {num}")


# @bot.event
# async def on_reaction_add(reaction, user, ctx):
#     bet_number = None
#     if reaction.emoji == 'üçé':
#         bet_number = 1
#     elif reaction.emoji == 'üçä':
#         bet_number = 2
#     elif reaction.emoji == 'üçá':
#         bet_number = 3
#     elif reaction.emoji == 'üçí':
#         bet_number = 4

#     if bet_number is not None:
#         rand = random.randint(1, 4)

#         if bet_number == rand:
#             await ctx.send(f'{user.mention}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
#         else:
#             await ctx.send(f'{user.mention}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')


@bot.command()
async def game(ctx, member: discord.Member = None):
    if ctx.bot.game_choice is None:
        await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.')
        return
    await ctx.send("–ù–∞—á–∞–ª–æ")

    rand = random.randint(1, 4)

    if member is None:
        member = ctx.author

    await ctx.send(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')

    if ctx.bot.game_choice == rand:
        cursor.execute("UPDATE users SET cash = cash + 20 WHERE id = {}".format(member.id))
        connection.commit()
        await ctx.send(f'{member.mention}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
    else:
        cursor.execute("UPDATE users SET cash = cash - 20 WHERE id = {}".format(member.id))

        connection.commit()
        await ctx.send(f'{member.mention}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
# –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –°–í–Ø–ó–ê–ù–ù–´–• –° –†–£–õ–ï–¢–ö–û–ô    


# –ö–û–ú–ú–ê–ù–î–ê !HELP 
@bot.command(pass_context = True)
async def help(ctx):
    emb = discord.Embed(title = '–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–æ–º–º–∞–Ω–¥–∞–º')
    emb.add_field(name= '{}start'.format(settings['PREFIX']), value = '–ù–∞—á–∞–ª–æ —Ä—É–ª–µ—Ç–∫–∏')

    await ctx.send(embed = emb)

# –ö–õ–ò–ö–ï–†
    @bot.command()
    async def work(ctx):
        instructions = await ctx.send('–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –∑–∞–ª—É—Ç–∞—Ç—å —à–µ–∫–µ–ª–∏:')
        await instructions.add_reaction('üçé')


        ctx.bot.game_choice = None  # Initialize the choice

        def check(reaction, user):
            return user == ctx.message.author and reaction.emoji in ['üçé']

        reaction, user = await bot.wait_for('reaction_add', check=check)
        if reaction.emoji == 'üçé':
            ctx.bot.game_choice = 1

@bot.command()
async def text(ctx):
    embed = Embed(color=ctx.author.color)
    embed.add_field(name=':leaves:')

bot.run(settings['TOKEN'])


