import discord
from discord.ext import commands, tasks

import sqlite3
import json
from tabulate import tabulate

import re
import random
from config import settings

connection = sqlite3.connect('server.db')
cursor = connection.cursor()

intents = discord.Intents().all()
bot = commands.Bot(command_prefix=settings['PREFIX'], intents=intents)
int_pattern = re.compile(r'^\s*[-+]?\d+\s*$')


@bot.event
async def on_ready():
    print(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫–∞–∫ {bot.user.name}')
    cursor.execute("""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        id INT,
        cash BIGINT,
        rep INT
    )""")

    for guild in bot.guilds:
        for member in guild.members:
            if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0)")
        else:
            pass
    connection.commit()
@bot.event
async def on_member_join(member):
    if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
        cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0)")
        connection.commit()
    else:
        pass

@bot.command(aliases = ['balance', 'cash'])
async def __balance(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send(embed = discord.Embed(
            description= f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} :leaves:**"""
        ))
    else:
        await ctx.send(embed = discord.Embed(
        description= f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(member.id)).fetchone()[0]} :leaves:**"""
        ))
@bot.command(aliases = ['award'])
async def __award(ctx, member: discord.Member = None, amount: int = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É")
    else:
        if amount is None:
            await ctx.send(f"**{ctx.author}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å**")
        elif int(amount) < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1")
        else:
            cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(int(amount), member.id))
            connection.commit()

            await ctx.message.add_reaction('üî¥')
            
# @bot.command(aliases = ['take'])
# async def __take(ctx, member: discord.Member = None, amount = None):
#     if member is None:
#         await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–Ω—è—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É")
#     else:
#         if amount is None:
#             await ctx.send(f"**{ctx.author}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–Ω—è—Ç—å**")
#         else:
#             cursor.execute("UPDATE users SET cash = cash - {} WHERE id = {}".format(amount, member.id))
#             connection.commit()

#             await ctx.message.add_reaction('üî¥')



@bot.command()
async def start(ctx):
    instructions = await ctx.send('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É:')
    await instructions.add_reaction('üçé')
    await instructions.add_reaction('üçä')
    await instructions.add_reaction('üçá')
    await instructions.add_reaction('üçí')

    ctx.bot.game_choice = None  # Initialize the choice

    def check(reaction, user):
        return user == ctx.message.author and reaction.emoji in ['üçé', 'üçä', 'üçá', 'üçí']

    reaction, user = await bot.wait_for('reaction_add', check=check)
    if reaction.emoji == 'üçé':
        ctx.bot.game_choice = 1
    elif reaction.emoji == 'üçä':
        ctx.bot.game_choice = 2
    elif reaction.emoji == 'üçá':
        ctx.bot.game_choice = 3
    elif reaction.emoji == 'üçí':
        ctx.bot.game_choice = 4
    # message = await ctx.send(instructions)
    # reactions = ['üçé', 'üçä', 'üçá', 'üçí']
    # for reaction in reactions:
    #     await message.add_reaction(reaction)
    
@bot.command()
async def bet(ctx, bet):
    if ctx.bot.game_choice is None:
        await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.')
        return
    if ctx.message.author.bot:
            return

    if not int_pattern.match(bet):
        return await ctx.send("–û—à–∏–±–∫–∞! –ü–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç–∞–≤–∫—É!")
    num = int(bet)
    if num <= 0:
        return await ctx.send("–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –Ω—É–ª—é!")
    return await ctx.send(f"–°—Ç–∞–≤–∫–∞: {num}")


# @bot.event
# async def on_reaction_add(reaction, user, ctx):
#     bet_number = None
#     if reaction.emoji == 'üçé':
#         bet_number = 1
#     elif reaction.emoji == 'üçä':
#         bet_number = 2
#     elif reaction.emoji == 'üçá':
#         bet_number = 3
#     elif reaction.emoji == 'üçí':
#         bet_number = 4

#     if bet_number is not None:
#         rand = random.randint(1, 4)

#         if bet_number == rand:
#             await ctx.send(f'{user.mention}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
#         else:
#             await ctx.send(f'{user.mention}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')


@bot.command()
async def game(ctx, member: discord.Member = None):
    if ctx.bot.game_choice is None:
        await ctx.send('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.')
        return

    await ctx.send("–ù–∞—á–∞–ª–æ")

    rand = random.randint(1, 4)

    if member is None:
        member = ctx.author

    await ctx.send(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')

    if ctx.bot.game_choice == rand:
        cursor.execute("UPDATE users SET cash = cash + 20 WHERE id = {}".format(member.id))
        connection.commit()
        await ctx.send(f'{member.mention}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
    else:
        cursor.execute("UPDATE users SET cash = cash - 20 WHERE id = {}".format(member.id))

        connection.commit()
        await ctx.send(f'{member.mention}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand}')
    

@bot.command
async def help(ctx):
    ctx.message.channel.send("—Ç—É—Ç –±—É–¥–µ—Ç –∏–Ω—Ñ–∞")


bot.run(settings['TOKEN'])